<html>
<head>
<TITLE>Костёр дружбы Артек+</TITLE>
<META name="autor" content="Добрый День, dobryi-den@narod.ru">
<META name="copyright" content="Содружество «Артек+»">
<META name="robots" content="noindex">

<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no, viewport-fit=cover">

    <!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.0//EN" "//www.wapforum.org/DTD/xhtml-mobile10.dtd">
    <meta name="format-detection" content="telephone=no" />
    <meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width" />
    <meta name="mobile-web-app-capable" content="yes">
    <meta http-equiv="Content-Type" content="text/html; charset=windows-1251">

<script type="text/javascript">
window.onload= function() {
    document.getElementById('toggler').onclick = function() {
        openbox('box', this);
        return false;
    };
};
function openbox(id, toggler) {
    var div = document.getElementById(id);
    if(div.style.display == 'block') {
        div.style.display = 'none';
        toggler.innerHTML = '<IMG src=knopka_okno_text.png width=50 height=50 border=0>';

    }
    else {
        div.style.display = 'block';
        toggler.innerHTML = '<IMG src=knopka_okno_krug.png width=50 height=50 border=0>';
    }
}

function openWin1() {
  myWin= open("text.htm", "okno");
}

function openWin2() {
  myWin= open("krug_vk.htm", "okno");
}
</script>

<STYLE>

      body
      {
        font-family: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif;
        font-size: 16px;
        line-height: 1.67em;
        color: #111111;
        cursor: pointer;
      }

html, body {
 /* Запрет прокрутки */
 overflow-x: hidden;
 overflow-y: hidden;
}


#start {
margin: 0px;
z-index: 6;
position:fixed;
bottom: 0px;
right: 0px;
}

#shyrma {
margin: 0px;
z-index: 5;
position:fixed;
bottom: -851px;
right: 0px;
animation: rotate-margin 7s 1;
}

@keyframes rotate-margin {
0%{
margin-bottom:851px;
}
99%{
margin-bottom:851px;
}
100%{
margin-bottom:-851px;
}
}

#koster {
margin: 0px;
z-index: 4;
position:fixed;
bottom: -2px;
left: -3px;
}

#koster_fon {
margin: 0px;
z-index: 3;
position:fixed;
bottom: -2px;
left: -3px;
}

#knopka_okno {
margin: 0px;
z-index: 2;
position: fixed;
bottom: 7px;
right: 10px;
}

#text {
margin: 0px;
z-index: 1;
position: fixed;
top: 0px;
bottom: 40px;
right: 0px;
left: 0px;
}

table.table_border {
border-radius: 0px 0px 13px 13px; /* Уголки */
}

td.table_border {
border-radius: 0px 0px 10px 10px; /* Уголки */
}

</style>

</head>

<BODY leftmargin=0 rightmargin=0 margimwidth=0 topmargin=0 bottommargin=0 marginheight=0>
<div id="root">


<div id='start'>
<audio id=audio src="izgib_gitary_zheltoi.mp3" loop></audio>
<img src="noch_vk_desktop.jpg" onclick="this.src = (this.src.indexOf ('noch_mobi.jpg') > 0) ? '0.gif' : '0.gif';if(audio.paused){audio.currentTime=0;audio.play()}else{audio.pause()}">
</div>

<div id='shyrma'>
<img src="white.gif" width=1000 height=841 border=0>
</div>

<div id='koster'>
<IMG src=koster.gif>
</div>

<div id='koster_fon'>
<IMG src=koster_fon.png>
</div>

<TABLE width=100% height=100% cellpadding=0 cellspacing=0 border=0>
<TR height=100%><TD>
<IFRAME src=krug_vk.htm width=100% height=100% noresize frameborder="no" name="okno" marginwidth=0 marginheight=0></IFRAME>
</TD></TR>

<TR height=40><TD align=right>
	<div id='knopka_okno'>
	<A id="toggler" href="#">
	   <IMG src=knopka_okno_text.png width=50 height=50 border=0>
	</A>
	</div>

	<div id="box" style="display: none;">
		<div id='text'>
			<TABLE width=100% height=100% bgcolor=white cellspacing=00 cellpadding=0 border=0>
			<TR align=left><TD>
			<IFRAME src=text.htm width=100% height=100% noresize frameborder="no" name="okno" marginwidth=0 marginheight=0></IFRAME>
			</TD></TR>
			</TABLE>
		</div>
	</div>
</TD></TR>
</TABLE>









</div>


			<script>
				
// Код библиотеки https://github.com/VKCOM/vkui-connect
        (function(window) {
  var FUNCTION = 'function';
  var UNDEFINED = 'undefined';
  var subscribers = [];
  var webFrameId = null;
  var connectVersion = '1.2.0';
  var isWeb = typeof window !== UNDEFINED && !window.AndroidBridge && !window.webkit;
  var eventType = isWeb ? 'message' : 'VKWebAppEvent';

  if (typeof window !== UNDEFINED) {

    //polyfill
    if (!window.CustomEvent) {
      (function() {
        function CustomEvent(event, params) {
          params = params || {bubbles: false, cancelable: false, detail: undefined};
          var evt = document.createEvent('CustomEvent');
          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
          return evt;
        };

        CustomEvent.prototype = window.Event.prototype;

        window.CustomEvent = CustomEvent;
      })();
    }

    window.addEventListener(eventType, function() {
      var args = Array.prototype.slice.call(arguments);
      var _subscribers = subscribers.slice();
      if (isWeb) {
        if (args[0].data.hasOwnProperty('webFrameId')) {
          delete args[0].data.webFrameId;
        }
        if (args[0].data.hasOwnProperty('connectVersion')) {
          delete args[0].data.connectVersion;
        }
        if (args[0].data.type && args[0].data.type === 'VKWebAppSettings') {
          webFrameId = args[0].data.frameId;
        } else {
          _subscribers.forEach(function(fn) {
            fn({
              detail: args[0].data
            });
          });
        }
      } else {
        _subscribers.forEach(function(fn) {
          fn.apply(null, args);
        });
      }
    });
  }

  window.connect = {
    /**
     * Sends a message to native client
     *
     * @example
     * message.send('VKWebAppInit');
     *
     * @param {String} handler Message type
     * @param {Object} params Message data
     * @returns {void}
     */
    send: function send(handler, params) {
      if (!params) {
        params = {};
      }

      var isClient = typeof window !== UNDEFINED;
      var androidBridge = isClient && window.AndroidBridge;
      var iosBridge = isClient && window.webkit && window.webkit.messageHandlers;
      var isDesktop = !androidBridge && !iosBridge;

      if (androidBridge && typeof androidBridge[handler] == FUNCTION) {
        androidBridge[handler](JSON.stringify(params));
      }
      if (iosBridge && iosBridge[handler] && typeof iosBridge[handler].postMessage == FUNCTION) {
        iosBridge[handler].postMessage(params);
      }

      if (isDesktop) {
        parent.postMessage({
          handler: handler,
          params: params,
          type: 'vk-connect',
          webFrameId: webFrameId,
          connectVersion
        }, '*');
      }
    },
    /**
     * Subscribe on VKWebAppEvent
     *
     * @param {Function} fn Event handler
     * @returns {void}
     */
    subscribe: function subscribe(fn) {
      subscribers.push(fn);
    },
    /**
     * Unsubscribe on VKWebAppEvent
     *
     * @param {Function} fn Event handler
     * @returns {void}
     */
    unsubscribe: function unsubscribe(fn) {
      var index = subscribers.indexOf(fn);

      if (index > -1) {
        subscribers.splice(index, 1);
      }
    },

    /**
     * Checks if native client supports nandler
     *
     * @param {String} handler Handler name
     * @returns {boolean}
     */
    supports: function supports(handler) {

      var isClient = typeof window !== UNDEFINED;
      var androidBridge = isClient && window.AndroidBridge;
      var iosBridge = isClient && window.webkit && window.webkit.messageHandlers;
      var desktopEvents = [
        "VKWebAppInit",
        "VKWebAppGetCommunityAuthToken",
        "VKWebAppAddToCommunity",
        "VKWebAppGetUserInfo",
        "VKWebAppSetLocation",
        "VKWebAppGetClientVersion",
        "VKWebAppGetPhoneNumber",
        "VKWebAppGetEmail",
        "VKWebAppGetGeodata",
        "VKWebAppSetTitle",
        "VKWebAppGetAuthToken",
        "VKWebAppCallAPIMethod",
        "VKWebAppJoinGroup",
        "VKWebAppAllowMessagesFromGroup",
        "VKWebAppDenyNotifications",
        "VKWebAppAllowNotifications",
        "VKWebAppOpenPayForm",
        "VKWebAppOpenApp",
        "VKWebAppShare",
        "VKWebAppShowWallPostBox",
        "VKWebAppScroll",
        "VKWebAppResizeWindow",
      ];

      if (androidBridge && typeof androidBridge[handler] == FUNCTION) return true;

      if (iosBridge && iosBridge[handler] && typeof iosBridge[handler].postMessage == FUNCTION) return true;

      if (!iosBridge && !androidBridge && ~desktopEvents.indexOf(handler)) return true;

      return false;
    }
  };
})(window);

// Код библиотеки https://github.com/VKCOM/vkui-connect -----

connect.send('VKWebAppInit', {});




			</script>
	</body>
</html>